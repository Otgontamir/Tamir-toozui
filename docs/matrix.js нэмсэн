// –ê—Ä–∫–∞–Ω –Ω—ç—Ä—Å
const arcanaNames = [
  "", "–ò–ª–±—ç—á–∏–Ω", "–î—ç—ç–¥ —Å–∞–Ω–≤–∞–∞—Ä—Ç–∞–Ω", "–•–∞—Ç–∞–Ω —Ö–∞–∞–Ω", "–≠–∑—ç–Ω —Ö–∞–∞–Ω", "–•–∏–µ—Ä–æ—Ñ–∞–Ω—Ç",
  "–•–∞–π—Ä–ª–∞–≥—á–∏–¥", "–°“Ø–π—Ö —Ç—ç—Ä—ç–≥", "–®—É–¥–∞—Ä–≥–∞ —ë—Å", "–î–∞—è–∞–Ω—á", "–ê–∑—ã–Ω —Ö“Ø—Ä–¥",
  "–•“Ø—á —á–∞–¥–∞–ª", "–î“Ø“Ø–∂–ª—ç–≥–¥—Å—ç–Ω —Ö“Ø–Ω", "“Æ—Ö—ç–ª", "–ó–æ—Ö–∏—Ü—É—É–ª–∞–ª—Ç", "–ß”©—Ç–≥”©—Ä",
  "–¶–∞–º—Ö–∞–≥", "–û–¥", "–°–∞—Ä", "–ù–∞—Ä", "–®“Ø“Ø—Ö", "–î—ç–ª—Ö–∏–π", "–®–æ–≥–ª–æ–≥—á"
];

// –ê—Ä–∫–∞–Ω —Ç–∞–π–ª–±–∞—Ä
const arcanaDescriptions = {
  1: "–•“Ø—Å—ç–ª –∑–æ—Ä–∏–≥, —Å–∞–Ω–∞–∞—á–∏–ª–≥–∞",
  2: "–ó”©–Ω —Å–æ–≤–∏–Ω, –º—ç—Ä–≥—ç–Ω —É—Ö–∞–∞–Ω",
  3: "–ë“Ø—Ç—ç—ç–ª—á –±–∞–π–¥–∞–ª, —Ö–∞–ª–∞–º–∂",
  4: "–¢–æ–≥—Ç–≤–æ—Ä—Ç–æ–π –±–∞–π–¥–∞–ª, –º–∞–Ω–ª–∞–π–ª–∞–ª",
  5: "–°“Ø–Ω—Å–ª—ç–≥ –º—ç–¥–ª—ç–≥, —É–ª–∞–º–∂–ª–∞–ª",
  6: "–•–∞–π—Ä, —ç–≤ –Ω–∞–π—Ä–∞–º–¥–∞–ª",
  7: "–ó–æ—Ä–∏–ª–≥–æ, —è–ª–∞–ª—Ç",
  8: "–®—É–¥–∞—Ä–≥–∞ –±–∞–π–¥–∞–ª, —Ö–∞—Ä–∏—É—Ü–ª–∞–≥–∞",
  9: "–û—é—É–Ω —Å–∞–Ω–∞–∞–Ω—ã ”©—Å”©–ª—Ç",
  10: "”®”©—Ä—á–ª”©–ª—Ç, –±–æ–ª–æ–º–∂",
  11: "–•“Ø—á —á–∞–¥–∞–ª, –¥–æ—Ç–æ–æ–¥ —Ö—è–∑–≥–∞–∞—Ä–ª–∞–ª—Ç—ã–≥ –¥–∞–≤–∞—Ö",
  12: "–ó–æ–ª–∏–æ—Å–ª–æ–ª, –æ–π–ª–≥–æ–ª—Ç",
  13: "–®–∏–Ω—ç—á–ª—ç–ª, “Ø—Ö—ç–ª –±–∞ –¥–∞—Ö–∏–Ω —Ç”©—Ä”©–ª—Ç",
  14: "–¢—ç–Ω—Ü–≤—ç—Ä, –∑–æ—Ö–∏—Ü–æ–ª",
  15: "–°–æ—Ä–∏–ª—Ç, —Ç–∞—Ç–∞–≥–¥–∞–ª, —Ö–∞–º–∞–∞—Ä–∞–ª",
  16: "–ù—É—Ä–∞–ª—Ç, —Å—ç—Ä—ç–ª",
  17: "–ò—Ç–≥—ç–ª –Ω–∞–π–¥–≤–∞—Ä, —É—Ä–∞–º –∑–æ—Ä–∏–≥",
  18: "–•—É—É—Ä–º–∞–≥, –∞–π–¥–∞—Å",
  19: "–ë–∞—è—Ä –±–∞—è—Å–∞–ª, –∞–º–∂–∏–ª—Ç",
  20: "–°—ç—Ä–≥—ç–ª—Ç, —É—Ö–∞–º—Å—Ä—ã–Ω ”©”©—Ä—á–ª”©–ª—Ç",
  21: "–ë“Ø—Ç—ç—ç–ª, –∑–æ—Ä–∏–ª–≥–æ–æ –±–∏–µ–ª“Ø“Ø–ª—ç—Ö",
  22: "–≠—Ö–ª—ç–ª, –∏—Ç–≥—ç–ª"
};

// –ê—Ä–∫–∞–Ω —Ç–æ–æ 22-—Å —Ö—ç—Ç—Ä—ç—Ö—ç–¥ –±–∞–≥–∞—Å–≥–∞—Ö —Ñ—É–Ω–∫—Ü
function reduceToArcana(num) {
  while (num > 22) {
    num = num.toString().split('').reduce((a, b) => a + parseInt(b), 0);
  }
  return num === 0 ? 22 : num;
}

// –ú–∞—Ç—Ä–∏—Ü—ã–Ω —Ç–æ–æ—Ü–æ–æ–ª–æ–ª —Ö–∏–π—Ö —Ñ—É–Ω–∫—Ü
function calculateMatrixReport(date) {
  const birth = new Date(date);
  const day = birth.getDate();
  const month = birth.getMonth() + 1;
  const year = birth.getFullYear();

  const arc = {};

  const dayArc = reduceToArcana(day);
  const monthArc = reduceToArcana(month);
  const yearArc = reduceToArcana(year.toString().split('').reduce((a, b) => a + parseInt(b), 0));

  arc.day = dayArc;
  arc.month = monthArc;
  arc.year = yearArc;
  arc.karmic = reduceToArcana(dayArc + monthArc + yearArc);
  arc.soul = reduceToArcana(arc.karmic);

  // A‚ÄìG –≥–æ–ª —Ü—ç–≥“Ø“Ø–¥
  arc.A = reduceToArcana(day + month);
  arc.B = reduceToArcana(month + yearArc);
  arc.C = reduceToArcana(arc.A + arc.B);
  arc.D = reduceToArcana(arc.A + arc.C);
  arc.G = reduceToArcana(day + yearArc);

  // –¢–∞–π–ª–∞–Ω —Ö–∞—Ä—É—É–ª–∞—Ö
  const resultDiv = document.getElementById("matrixResult");
  let html = `<ul>`;
  html += `<li>üìÖ ”®–¥—Ä–∏–π–Ω –ê—Ä–∫–∞–Ω: <strong>${arc.day}</strong> ‚Äî ${arcanaDescriptions[arc.day]}</li>`;
  html += `<li>üìÜ –°–∞—Ä—ã–Ω –ê—Ä–∫–∞–Ω: <strong>${arc.month}</strong> ‚Äî ${arcanaDescriptions[arc.month]}</li>`;
  html += `<li>üìÖ –ñ–∏–ª–∏–π–Ω –ê—Ä–∫–∞–Ω: <strong>${arc.year}</strong> ‚Äî ${arcanaDescriptions[arc.year]}</li>`;
  html += `<li>üåÄ “Æ–π–ª–∏–π–Ω “Ø—Ä–∏–π–Ω –ê—Ä–∫–∞–Ω: <strong>${arc.karmic}</strong> ‚Äî ${arcanaDescriptions[arc.karmic]}</li>`;
  html += `<li>‚ù§Ô∏è –°—ç—Ç–≥—ç–ª–∏–π–Ω –ê—Ä–∫–∞–Ω: <strong>${arc.soul}</strong> ‚Äî ${arcanaDescriptions[arc.soul]}</li>`;
  html += `</ul>`;
  resultDiv.innerHTML = html;

  // A‚ÄìG —Ü—ç–≥“Ø“Ø–¥–∏–π–≥ —Ö–∞—Ä—É—É–ª–∞—Ö
  const matrixList = document.getElementById("matrix-list");
  if (matrixList) {
    matrixList.innerHTML = '';
    for (let key of ["A", "B", "C", "D", "G"]) {
      const num = arc[key];
      const name = arcanaNames[num] || '';
      const desc = arcanaDescriptions[num] || '';
      matrixList.innerHTML += `<li><b>${key}</b> —Ü—ç–≥: –ê—Ä–∫–∞–Ω ${num} ‚Äî ${name}: ${desc}</li>`;
    }
  }
}
function generateMatrixReport(date) {
  calculateMatrixReport(date);
}
